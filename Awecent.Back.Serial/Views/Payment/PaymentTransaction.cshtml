@{
    ViewBag.Title = "PaymentTransaction";
}

@Scripts.Render("~/bundles/report")
@Styles.Render("~/Content/report")

<h2>PaymentTransaction</h2>
<style>
    .label {
        display: inline;
        padding: .2em .6em .3em;
        font-size: 13px;
        font-weight: bold;
        line-height: 1;
        color: #000;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25em;
    }
</style>
<form ng-app="MyApp" ng-controller="PaymentTransactionController" name="ValidateForm" id="ValidateForm">
    <div class="row" style="margin-left:0;margin-right:0;">
        <div class="panel panel-default">
            <div class="panel-heading">Filter</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-3">
                        <label>Game Name</label>
                        <select ng-model="input.gameCode" ng-change="findProvider()" class="form-control" name="gameId">
                            @foreach (Awecent.Back.Serial.Models.Game game in ViewBag.Games)
                            {
                                <option value="@game.GameId">@game.GameName</option>
                            }
                        </select>
                    </div>
                    <div class="col-sm-3">
                        <label>Server Name</label>
                        <select ng-model="input.serverCode" class="form-control" name="serverId"
                                ng-options="srv.ServerId as srv.ServerName for srv in servers"></select>
                    </div>
                    <div class="col-sm-3">
                        <label>User Id</label>
                        <input type="text" ng-model="input.userId" class="form-control" name="userId" />
                    </div>


                </div>
                <div class="row">
                    <div class="col-sm-3">
                        <label>Provider Name</label>
                        <select ng-model="input.providerId" ng-change="findDealer()" class="form-control" name="providerId"
                                ng-options="pro.ProviderId as pro.ProviderName for pro in providers"></select>
                    </div>

                    <div class="col-sm-3">
                        <label>Dealer Name</label>
                        <select ng-model="input.dealerId" class="form-control" name="dealerId"
                                ng-options="del.DealerId as del.DealerName for del in dealers"></select>
                    </div>

                    <div class="col-sm-3">
                        <label>Reference Id</label>
                        <input type="text" ng-model="input.referenceId" class="form-control" name="referenceId" />
                    </div>

                </div>
                <div class="row">
                    <div class="form-group form-group-sm">
                        <div class="col-sm-3">
                            <label>Start Date</label>
                            <div class="float-left rg-2m">
                                <div class='input-group date' id='datetimepicker6'>
                                    <input type='text' class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <label>End Date</label>
                            <div class="float-left">
                                <div class='input-group date' id='datetimepicker7'>
                                    <input type='text' class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <label>Stutus</label>
                            @*<select ng-model="input.TransactionStatus" class="form-control" name="TransactionStatus"
                                    ng-options="sta.StatusId as sta.StatusName for sta in TransactionStatus"></select>*@

                            <select name="TransactionState" id="TransactionState" class="form-control"
                                    ng-options="option.StatusName for option in input.TransactionState.availableOptions track by option.StatusId"
                                    ng-model="input.TransactionState.selectedOption"></select>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <button class="btn btn-info" type="button" ng-click="search()" style="margin-top:23px;">Search</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">Record</div>
            <div class="panel-body">
                <md-table-container>
                    <table md-table ng-model="selected" md-progress="promise">
                        <thead md-head md-order="query.order" md-on-reorder="logOrder">
                            <tr md-row>
                                <th md-column md-numeric md-order-by="PaymentTransactionId"><span>PaymentTransactionId</span></th>
                                <th md-column md-order-by="ReferenceId"><span>ReferenceId</span></th>
                                <th md-column md-order-by="ProviderName" md-desc><span>ProviderName</span></th>
                                <th md-column md-order-by="DealerName"><span>DealerName</span></th>
                                <th md-column md-order-by="GameName"><span>GameName</span></th>
                                <th md-column md-order-by="ServerName"><span>ServerName</span></th>
                                <th md-column md-order-by="UserId"><span>UserId</span></th>
                                <th md-column md-order-by="CustomerIp"><span>CustomerIp</span></th>
                                <th md-column md-order-by="CreateTransactionDate"><span>CreateTransactionDate</span></th>
                                <th md-column md-order-by="RcvTransactionId"><span>RcvTransactionId</span></th>
                                <th md-column md-order-by="RcvReferenceId"><span>RcvReferenceId</span></th>
                                <th md-column md-order-by="RcvProviderName"><span>RcvProviderName</span></th>
                                <th md-column md-order-by="RcvPaymentCode"><span>RcvPaymentCode</span></th>
                                <th md-column md-numeric md-order-by="RcvPrice"><span>RcvPrice</span></th>
                                <th md-column md-order-by="RcvCurrencyUnit"><span>RcvCurrencyUnit</span></th>
                                <th md-column md-order-by="RcvTransactionDate"><span>RcvTransactionDate</span></th>
                                <th md-column md-order-by="RcvRespCode"><span>RcvRespCode</span></th>
                                <th md-column md-order-by="RcvRespMsg"><span>RcvRespMsg</span></th>
                                <th md-column md-order-by="ExceptionCode"><span>ExceptionCode</span></th>
                                <th md-column md-order-by="ExceptionMsg"><span>ExceptionMsg</span></th>
                                <th md-column md-order-by="TransactionStatus"><span>TransactionStatus</span></th>
                            </tr>
                        </thead>
                        <tbody md-body>
                            <tr md-row md-select="dessert" md-on-select="logItem" md-auto-select="options.autoSelect" ng-repeat="dessert in desserts.Data | filter: filter.search | orderBy: query.order | limitTo: query.limit : (query.page -1) * query.limit">
                                <td md-cell>{{dessert.PaymentTransactionId}}</td>
                                <td md-cell>{{dessert.ReferenceId}}</td>
                                <td md-cell>{{dessert.ProviderName}}</td>
                                <td md-cell>{{dessert.DealerName}}</td>
                                <td md-cell>{{dessert.GameName}}</td>
                                <td md-cell>{{dessert.ServerName}}</td>
                                <td md-cell>{{dessert.UserId}}</td>
                                <td md-cell>{{dessert.CustomerIp}}</td>
                                <td md-cell>{{dessert.CreateTransactionDate.replace('/Date(','').replace(')/','') | date:'dd-MM-yyyy HH:mm:ss' : +0700}}</td>
                                <td md-cell>{{dessert.RcvTransactionId}}</td>
                                <td md-cell>{{dessert.RcvReferenceId}}</td>
                                <td md-cell>{{dessert.RcvProviderName}}</td>
                                <td md-cell>{{dessert.RcvPaymentCode}}</td>
                                <td md-cell>{{dessert.RcvPrice}}</td>
                                <td md-cell>{{dessert.RcvCurrencyUnit}}</td>
                                <td md-cell>{{dessert.RcvTransactionDate.replace('/Date(','').replace(')/','') | date:'dd-MM-yyyy HH:mm:ss' : +0700}}</td>
                                <td md-cell>{{dessert.RcvRespCode}}</td>
                                <td md-cell>{{dessert.RcvRespMsg}}</td>
                                <td md-cell>{{dessert.ExceptionCode}}</td>
                                <td md-cell>{{dessert.ExceptionMsg}}</td>
                                <td md-cell>{{dessert.TransactionStatus}}</td>
                            </tr>
                        </tbody>
                    </table>
                </md-table-container>

                <md-table-pagination md-limit="query.limit" md-options="[5, 10, 20, 50, 100]" md-page="query.page" md-total="{{desserts.Total}}" md-page-select="options.pageSelector" md-boundary-links="options.boundaryLinks" md-on-paginate="logPagination"></md-table-pagination>

            </div>
        </div>
</form>

@section Scripts{
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="~/Scripts/md-data-table/angular-material.min.css" rel="stylesheet" />
    <link href="~/Scripts/md-data-table/md-data-table.css" rel="stylesheet" />
    <script src="~/Scripts/md-data-table/angular-animate.min.js"></script>
    <script src="~/Scripts/md-data-table/angular-aria.min.js"></script>
    <script src="~/Scripts/md-data-table/angular-material.min.js"></script>
    <script src="~/Scripts/md-data-table/md-data-table2.js"></script>

    <script type="text/javascript">
    angular.module('MyApp', ['ui.bootstrap', 'ngMaterial', 'md.data.table']).controller('PaymentTransactionController', ['$scope', '$http', '$mdEditDialog', '$q', '$timeout', function ($scope, $http, $mdEditDialog, $q, $timeout) {
        $scope.input = {};
        $scope.input.page = 1;
        $scope.input.pageSize = 20;
        $scope.input.total = 0;
        $scope.providers = [];
        $scope.selected = [];

        if ('@ViewBag.Role' == 'PaymentReporter') {
            
            $scope.input.TransactionState = {
                availableOptions: [
                  { StatusId: '3', StatusName: 'Transaction Success' }
                ],
                selectedOption: { StatusId: '3', StatusName: 'Transaction Success' }
                //TransactionStatus: { StatusId: '3', StatusName: 'Transaction Success' }
            };

        } else {

            $scope.input.TransactionState = {
                availableOptions: [
                  { StatusId: '', StatusName: 'All' }
                        , { StatusId: '1', StatusName: 'Transaction Open' }
                        , { StatusId: '2', StatusName: 'Transaction Reject' }
                        , { StatusId: '3', StatusName: 'Transaction Success' }
                        , { StatusId: '4', StatusName: 'Transaction Close' }
                ],
                selectedOption: { StatusId: '', StatusName: 'All' }
                //TransactionStatus: { StatusId: '', StatusName: 'All' }
            };
        }


        


        $scope.options = {
            autoSelect: true,
            boundaryLinks: false,
            largeEditDialog: false,
            pageSelector: false,
            rowSelection: true
        };

        $scope.query = {
            order: 'name',
            limit: 20,
            page: 1
        };

        $scope.desserts = {
            "Total": 0,
            "Data": [
            ]
        };

        $scope.logItem = function (item) {
            console.log(item.name, 'was selected');
        };

        $scope.logOrder = function (order) {
            console.log('order: ', order);
        };

        $('#datetimepicker6').datetimepicker({
            defaultDate: new Date().setHours(00, 00),
            disabledDates: [],
            format: "YYYY-MM-DD HH:mm"
        });
        $('#datetimepicker7').datetimepicker({
            defaultDate: new Date().setHours(23, 59, 59),
            disabledDates: [],
            useCurrent: false,
            format: "YYYY-MM-DD HH:mm"
        });

        $("#datetimepicker6").on("dp.change", function (e) {
            $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
        });
        $("#datetimepicker7").on("dp.change", function (e) {
            $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
        });

        $scope.findProvider = function () {
            $http.get('@Url.Action("GetServer", "Payment")/' + $scope.input.gameCode)
                .success(function (d) {
                    if (d.Result) {
                        $scope.servers = d.data;
                    }
                });
            $http.get('@Url.Action("GetProvider", "Payment")/' + $scope.input.gameCode)
                .success(function (d) {
                    if (d.Result) {
                        $scope.providers = d.data;
                    }
                });
        }

        $scope.findDealer = function () {
            $http.get('@Url.Action("GetDealer", "Payment")/' + $scope.input.providerId)
                .success(function (d) {
                    if (d.Result) {
                        $scope.dealers = d.data;
                    }
                });
        }

        $scope.search = function () {

            //console.log($scope.input.TransactionStatus.selectedOption.StatusId);
            $scope.input.pageSize = parseInt($scope.input.pageSize);
            var start_date = $('#datetimepicker6 input').val(),
                end_date = $('#datetimepicker7 input').val();

            $scope.input.StartDate = start_date;
            $scope.input.EndDate = end_date;

            
            $scope.input.TransactionStatus = $scope.input.TransactionState.selectedOption.StatusId;
            

            if ($scope.input.EndDate < $scope.input.StartDate || $scope.input.StartDate.trim() == "") { alert('Please select EndDate > StartDate'); return; }
            if (!$("#ValidateForm").valid()) return;
            $('#spinner').toggle(true);
            $http.post('@Url.Action("SearchTransaction", "Payment")', $scope.input ).success(function (response) {
                $('#spinner').toggle(false);
                if (response.Result) {
                    $scope.desserts = response;
                    $scope.desserts.total = response.Total;
                    notifyInfo("record " + response.Data.length + '/' + response.Total);
                } else {
                    $scope.desserts = {
                        "Total": 0,
                        "Data": [
                        ]
                    };
                    notifyWarning(response.Message);
                }
            }).error(function (e) {
                $('#spinner').toggle(false);
                console.log(e);
                notifyError('500 server error.');
            });
        }

        $scope.logPagination = function (page, limit) {
            console.log('page: ', page);
            console.log('limit: ', limit);

            $scope.input.page = 1;
            $scope.input.pageSize = page * limit;

            var start_date = $('#datetimepicker6 input').val(),
                end_date = $('#datetimepicker7 input').val();

            $scope.input.StartDate = start_date;
            $scope.input.EndDate = end_date;


            $scope.input.TransactionStatus = $scope.input.TransactionState.selectedOption.StatusId;

            $http.post('@Url.Action("SearchTransaction", "Payment")', $scope.input)
            .success(function (result) {
                $scope.desserts = result;
                $scope.desserts.total = response.Total;

            });
        }
    }]);

    $(document).ready(function () {
        $.validator.addMethod("valueNotEquals", function (value, element, arg) {
            return arg != value;
        }, "Please select some value.");

        $("#ValidateForm").validate({
            rules: {
                gameId: { required: true, valueNotEquals: '? undefined:undefined ?' },
            },
        });
    });
</script>
}