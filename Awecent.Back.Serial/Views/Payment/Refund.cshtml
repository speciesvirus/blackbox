@{
    ViewBag.Title = "ItemCode";
}
@Scripts.Render("~/bundles/report")
@Styles.Render("~/Content/report")

<style>
    .label {
        display: inline;
        padding: .2em .6em .3em;
        font-size: 13px;
        font-weight: bold;
        line-height: 1;
        color: #000;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25em;
    }


    .input-group-addon, .input-group-btn {
        width: inherit;
    }

    .float-left {
        float: left;
    }

    .rg-2m:first-child {
        margin-right: 1em;
    }

    .mg-2 {
        margin-bottom: 2em;
    }

    .form-group.required .control-label:after {
        content: "*";
        position: absolute;
        margin-left: 3px;
        color: red;
    }


</style>
<h2>Report ItemCode</h2>
<div class="bs-example" data-example-id="form-group-height-sizes">

    <form ng-app="MyApp" ng-controller="ReportItemCodeController" class="form-horizontal">

        <div class="panel panel-default">
            <div class="panel-heading">Filter</div>
            <div class="panel-body">

                <div class="form-group form-group-sm required">
                    <label class="col-sm-2 control-label" for="formGroupInputSmall">Game</label>
                    <div class="col-sm-10">
                        <select id="gameID" ng-model="input.gameId" class="form-control" name="gameId">
                            @*<option value="0">Please select game</option>*@

                            @foreach (Awecent.Back.Serial.Models.Game game in ViewBag.Server)
                            {
                                if (ViewBag.ServerName != game.GameId)
                                {
                                    ViewBag.ServerName = game.GameId;
                                    <optgroup label="@game.GameName">
                                        @foreach (Awecent.Back.Serial.Models.Game server in ViewBag.Server)
                                        {
                                            if (game.GameId == server.GameId)
                                            {
                                                <option value="@server.GameId-@server.ServerId">@server.GameName - @server.ServerName</option>
                                            }
                                        }
                                    </optgroup>
                                }
                            }
                        </select>

                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    <label class="col-sm-2 control-label" for="formGroupInputSmall">Date & Time</label>
                    <div class="col-sm-10">

                        <div class="float-left rg-2m">
                            <div class='input-group date' id='datetimepicker6'>
                                <input type='text' class="form-control" ng-model="input.startDate" name="startDate" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="float-left">
                            <div class='input-group date' id='datetimepicker7'>
                                <input type='text' class="form-control" ng-model="input.endDate" name="endDate" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="form-group form-group-sm">
                    <label class="col-sm-2 control-label" for="formGroupInputSmall">UID</label>
                    <div class="col-sm-10">
                        <input type="text" ng-model="input.UID" class="form-control" name="UID" />

                    </div>
                </div>


                <div class="form-group form-group-sm">
                    <label class="col-sm-2 control-label" for="formGroupInputSmall"></label>
                    <div class="col-sm-10">
                        <button class="btn btn-info chart-submit-1" type="button" ng-click="search()">Search</button>
                    </div>

                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">Record</div>
            <div class="panel-body">
                @*<table class="table table-bordered">
                        <thead>
                            <tr>
                                <td>#</td>
                                <td>Promotion</td>
                                <td>Lot</td>
                                <td>Code</td>
                                <td>UID</td>
                                <td>Facebook User</td>
                                <td>Create at</td>
                                <td>Top-Up at</td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="item in itemCodes">
                                <td>{{ $index+1 }}</td>
                                <td>{{ item.PromotionID }}</td>
                                <td>{{ item.LotID }}</td>
                                <td>{{ item.Code }}</td>
                                <td>{{ item.UID }}</td>
                                <td>{{ item.FacebookID }}</td>
                                <td>{{ item.TimeCreate }}</td>
                                <td>{{ item.TimeUse }}</td>
                            </tr>
                        </tbody>
                    </table>*@
                @*<uib-pagination total-items="input.total" ng-model="input.page" max-size="20"
                    ng-change="search()" items-per-page="input.pageSize"></uib-pagination>*@
                @*ng-controller="ExampleController9"*@


                @*md-row-select="options.rowSelection"*@
                <md-table-container>
                    <table md-table ng-model="selected" md-progress="promise">
                        <thead md-head md-order="query.order" md-on-reorder="logOrder">
                            <tr md-row>
                                <th md-column md-order-by="gameCode"><span>Game</span></th>
                                <th md-column md-order-by="dealerName"><span>Dealer</span></th>
                                <th md-column md-numeric md-order-by="pointGame" md-desc><span>pointGame</span></th>
                                <th md-column md-numeric md-order-by="productCode"><span>productCode</span></th>
                                <th md-column md-order-by="userId"><span>UID</span></th>
                                <th md-column md-numeric md-order-by="exceptionCode"><span>Code</span></th>
                                <th md-column md-order-by="exceptionMsg"><span>Message</span></th>
                                <th md-column md-order-by="createDate"><span>Date</span></th>
                                @*<th md-column md-order-by="comment">
                                        <md-icon>comments</md-icon>
                                        <span>Comments</span>
                                    </th>*@
                            </tr>
                        </thead>
                        <tbody md-body>
                            @*ng-disabled="dessert.calories.value > 400"*@
                            <tr md-row md-select="dessert" md-on-select="logItem" md-auto-select="options.autoSelect" ng-repeat="dessert in desserts.Data | filter: filter.search | orderBy: query.order | limitTo: query.limit : (query.page -1) * query.limit">
                                <td md-cell>{{dessert.PromotionID}}</td>
                                @*<td md-cell>
                                        <md-select ng-model="dessert.type" placeholder="Other">
                                            <md-option ng-value="type" ng-repeat="type in getTypes()">{{type}}</md-option>
                                        </md-select>
                                    </td>*@
                                <td md-cell>{{dessert.gameCode}}</td>
                                <td md-cell>{{dessert.dealerName}}</td>
                                <td md-cell>{{dessert.pointGame}}</td>
                                <td md-cell>{{dessert.productCode}}</td>
                                <td md-cell>{{dessert.userId}}</td>
                                <td md-cell>{{dessert.exceptionCode}}</td>
                                <td md-cell>{{dessert.exceptionMsg}}</td>
                                <td md-cell>{{dessert.createDate}}</td>
                                @*<td md-cell ng-click="editComment($event, dessert)" ng-class="{'md-placeholder': !dessert.comment}">
                                    {{dessert.comment || 'Add a comment'}}
                                </td>*@
                                <td md-cell ng-click="editRefund($event, dessert)" ng-class="{'md-placeholder': !dessert.comment}">
                                    {{'Add a item'}}
                                </td>

                            </tr>
                        </tbody>
                    </table>
                </md-table-container>

                <md-table-pagination md-limit="query.limit" md-options="[5, 10, 20, 50, 100]" md-page="query.page" md-total="{{desserts.Total}}" md-page-select="options.pageSelector" md-boundary-links="options.boundaryLinks" md-on-paginate="logPagination"></md-table-pagination>

            </div>
        </div>
    </form>

</div>


@*<link href="~/Scripts/md-data-table/md-data-table-style.css" rel="stylesheet" />

    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-animate.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-aria.min.js"></script>
    <link href="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css" rel="stylesheet" />

    <script src="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>
    <script src="https://cdn.jsdelivr.net/angular-material-icons/0.6.0/angular-material-icons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js"></script>
    <script src="~/Scripts/md-data-table/md-data-table.js"></script>
    <script src="~/Scripts/md-data-table/md-data-table-templates.js"></script>*@
@section Scripts{

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="~/Scripts/md-data-table/angular-material.min.css" rel="stylesheet" />
    <link href="~/Scripts/md-data-table/md-data-table.css" rel="stylesheet" />

    <script src="~/Scripts/md-data-table/angular-animate.min.js"></script>
    <script src="~/Scripts/md-data-table/angular-aria.min.js"></script>

    @*<script src="~/Scripts/md-data-table/angular-material.min.js"></script>*@

    <!-- Angular Material Dependencies -->

<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>

<!-- Angular Material Library -->
<script src="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>


    <script src="~/Scripts/md-data-table/md-data-table2.js"></script>
    <script type="text/javascript">


        $(document).ready(function () {

            $('#datetimepicker6').datetimepicker({
                defaultDate: new Date().setHours(0, 0),
                disabledDates: [],
                format: 'MM/DD/YYYY HH:mm',
            });
            $('#datetimepicker7').datetimepicker({
                defaultDate: new Date().setHours(23, 59),
                disabledDates: [],
                useCurrent: false,

                format: 'MM/DD/YYYY HH:mm',

            });

            $("#datetimepicker6").on("dp.change", function (e) {
                $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
            });
            $("#datetimepicker7").on("dp.change", function (e) {
                $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
            });

            //$.validator.addMethod("valueNotEquals", function (value, element, arg) {
            //    return arg != value;
            //}, "Please select some value.");

            //$("#ValidateForm").validate({
            //    rules: {
            //        gameId: { required: true, valueNotEquals: '? undefined:undefined ?' },
            //        startData: { required: true },
            //        endDate: { required: true },

            //    },
            //});



        });


        angular.module('MyApp', ['ui.bootstrap', 'ngMaterial', 'md.data.table'])
        .controller('ReportItemCodeController', ['$scope', '$http', '$mdEditDialog','$mdDialog', '$mdMedia', '$q', '$timeout', function ($scope, $http, $mdEditDialog, $mdDialog, $mdMedia, $q, $timeout) {
            $scope.input = {};
            $scope.input.page = 1;
            $scope.input.pageSize = 20;
            $scope.input.total = 0;
            $scope.promotions = [];
            $scope.status = {};
            $scope.status.openedStart = false;
            $scope.status.openedEnd = false;
            $scope.itemCodes = [];
            $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
            $scope.format = $scope.formats[1];

            @*$scope.findPromotion = function () {
                $http.get('@Url.Action("GetPromotions","Report")/' + $scope.input.gameId)
                    .success(function (d) {
                        if (d.result) {
                            $scope.promotions = d.data;
                        }
                    });
            }*@

            $scope.log = function () {
                console.log($scope.input);
            }

            $scope.openStart = function ($even) {
                $scope.status.openedStart = true;
            }

            $scope.openEnd = function ($even) {
                $scope.status.openedEnd = true;
            }




            //aa

            $scope.selected = [];

            $scope.options = {
                autoSelect: true,
                boundaryLinks: false,
                largeEditDialog: false,
                pageSelector: false,
                rowSelection: true
            };

            $scope.query = {
                order: 'name',
                limit: 20,
                page: 1
            };

            $scope.desserts = {
                "Total": 0,
                "Data": [
                ]
            };

            $scope.editComment = function (event, dessert) {
                event.stopPropagation();

                var editDialog = {
                    modelValue: dessert.comment,
                    placeholder: 'Add a comment',
                    save: function (input) {
                        if (input.$modelValue === 'Donald Trump') {
                            return $q.reject();
                        }
                        if (input.$modelValue === 'Bernie Sanders') {
                            return dessert.comment = 'FEEL THE BERN!'
                        }
                        dessert.comment = input.$modelValue;
                    },
                    targetEvent: event,
                    title: 'Add a comment',
                    validators: {
                        'md-maxlength': 30
                    }
                };

                var promise;

                if ($scope.options.largeEditDialog) {
                    promise = $mdEditDialog.large(editDialog);
                } else {
                    promise = $mdEditDialog.small(editDialog);
                }

                promise.then(function (ctrl) {
                    var input = ctrl.getInput();

                    input.$viewChangeListeners.push(function () {
                        input.$setValidity('test', input.$modelValue !== 'test');
                    });
                });
            };

            $scope.getTypes = function () {
                return ['Candy', 'Ice cream', 'Other', 'Pastry'];
            };

            $scope.loadStuff = function () {
                $scope.promise = $timeout(function () {
                    // loading
                }, 2000);
            }

            $scope.logItem = function (item) {
                console.log(item.name, 'was selected');
            };

            $scope.logOrder = function (order) {
                console.log('order: ', order);
            };

            $scope.logPagination = function (page, limit) {
                console.log('page: ', page);
                console.log('limit: ', limit);

                $scope.input.page = 1;
                $scope.input.pageSize = page * limit;

                $http.post('@Url.Action("GetRefund", "Payment")', $scope.input)
                .success(function (result) {
                    $scope.desserts = result;
                });
            }


            $scope.editRefund = function (event, dessert) {
                
                event.stopPropagation();

                var confirm = $mdDialog.confirm()
                      .title('Would you like to refund?')
                      .textContent('All of the banks have agreed to refund this.')
                      .ariaLabel('Lucky day')
                      .targetEvent(event)
                      .ok('Please do it!')
                      .cancel('Cancel');
                $mdDialog.show(confirm).then(function () {
                    $http.post('@Url.Action("GetRefund", "Payment")', $scope.input)
                    .success(function (result) {
                        $scope.desserts = result;
                    });
                    $scope.status = 'You decided to get rid of your debt.';
                }, function () {
                    alert('bbb');
                    $scope.status = 'You decided to keep your debt.';
                });
         

            }

            //aa
                $scope.search = function () {
                    var start_date = $('input[name="startDate"]').val(),
                        end_date = $('input[name="endDate"]').val();
                    $scope.input.startDate = start_date;
                    $scope.input.endDate = end_date;

                    $http.post('@Url.Action("GetRefund", "Payment")', $scope.input)
                    .success(function (result) {
                        console.log("sss : ",result)
                        $scope.desserts = result;
                    });


                    //$scope.desserts = {
                    //    "count": 2,
                    //    "data": [
                    //      {
                    //          "name": "Frozen yogurt",
                    //          "type": "Ice cream",
                    //          "calories": { "value": 159.0 },
                    //          "fat": { "value": 6.0 },
                    //          "carbs": { "value": 24.0 },
                    //          "protein": { "value": 4.0 },
                    //          "sodium": { "value": 87.0 },
                    //          "calcium": { "value": 14.0 },
                    //          "iron": { "value": 1.0 }
                    //      }, {
                    //          "name": "Ice cream sandwich",
                    //          "type": "Ice cream",
                    //          "calories": { "value": 237.0 },
                    //          "fat": { "value": 9.0 },
                    //          "carbs": { "value": 37.0 },
                    //          "protein": { "value": 4.3 },
                    //          "sodium": { "value": 129.0 },
                    //          "calcium": { "value": 8.0 },
                    //          "iron": { "value": 1.0 }
                    //      }
                    //    ]
                    //};

                };


        }]);




    </script>
}
