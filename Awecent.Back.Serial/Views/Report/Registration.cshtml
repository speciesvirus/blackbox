@{
    ViewBag.Title = "Registration";
}

@Scripts.Render("~/bundles/report")
@Styles.Render("~/Content/report")


<style>
    .input-group-addon, .input-group-btn {
        width: inherit;
    }

    .float-left {
        float: left;
    }

    .rg-2m:first-child {
        margin-right: 1em;
    }

    .mg-2 {
        margin-bottom: 2em;
    }

    .chosen-container-multi .chosen-choices {
        border-radius: 3px;
        width: 500px;
    }
</style>

<div class="mg-2">
    <h2>User Registrations</h2>
    <div class="bs-example" data-example-id="form-group-height-sizes">
        <form class="form-horizontal">

            <div class="panel panel-default">
                <div class="panel-heading">Filter</div>
                <div class="panel-body">

                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall">Game</label>
                        <div class="col-sm-10">
                            <select id="gameID" ng-model="input.gameId" ng-change="findPromotion()" class="form-control" name="gameID">
                                @*<option value="0">Please select game</option>*@
                                @foreach (Awecent.Back.Serial.Models.Game game in ViewBag.Games)
                                {
                                    <option value="@game.GameId">@game.GameName</option>
                                }
                            </select>

                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall">Date & Time</label>
                        <div class="col-sm-10">

                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" class="input-sm form-control" id="start" name="start" />
                                <span class="input-group-addon">to</span>
                                <input type="text" class="input-sm form-control" id="end" name="end" />
                            </div>

                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall"></label>
                        <div class="col-sm-10">
                            <button class="btn btn-info" type="button" ng-click="search()">Search</button>
                        </div>

                    </div>

                </div>
            </div>

        </form>
    </div>



</div>


<script type="text/javascript">
    $(function () {

        $('#datepicker').datepicker({
            format: "dd/mm/yyyy",
            todayHighlight: true,
            toggleActive: true
        });

    });
</script>


<div id="chart" style="min-width: 310px; height: 400px; margin: 0 auto"></div>


<script type="text/javascript">

    //chart: {
    //        zoomType: 'xy'
    //},
    //title: {
    //        text: 'Combination chart'
    //},
    //xAxis: {
    //        categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
    //},
    //labels: {
    //        items: [{
    //            html: 'Total fruit consumption',
    //            style: {
    //                left: '50px',
    //                top: '18px',
    //                color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'
    //            }
    //        }]
    //},
    //series: [{
    //    type: 'column',
    //    name: 'Jane',
    //    data: [3, 2, 1, 3, 4]
    //}, {
    //    type: 'column',
    //    name: 'John',
    //    data: [2, 3, 5, 7, 6]
    //}, {
    //    type: 'column',
    //    name: 'Joe',
    //    data: [4, 3, 3, 9, 0]
    //}, {
    //    type: 'spline',
    //    name: 'Average',
    //    data: [3, 2.67, 3, 6.33, 3.33],
    //    marker: {
    //        lineWidth: 2,
    //        lineColor: Highcharts.getOptions().colors[3],
    //        fillColor: 'white'
    //    }
    //}, {
    //    type: 'pie',
    //    name: 'Total consumption',
    //    data: [{
    //        name: 'Jane',
    //        y: 13,
    //        color: Highcharts.getOptions().colors[0] // Jane's color
    //    }, {
    //        name: 'John',
    //        y: 23,
    //        color: Highcharts.getOptions().colors[1] // John's color
    //    }, {
    //        name: 'Joe',
    //        y: 19,
    //        color: Highcharts.getOptions().colors[2] // Joe's color
    //    }],
    //    center: [100, 80],
    //    size: 100,
    //    showInLegend: false,
    //    dataLabels: {
    //        enabled: false
    //    }
    //}]

    $(function () {



        $(".btn-info").click(function () {

            //var str = $("#datetimepicker6").find("input").val(),
            //    res = str.split("-"),
            //    $getDate = res[0],
            //    $getTime = res[1],
            //    resDate = $getDate.split("/"),
            //    $startDate = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0] + "" + $getTime + ":00";

            //var str = $("#datetimepicker7").find("input").val(),
            //    res = str.split("-"),
            //    $getDate = res[0],
            //    $getTime = res[1],
            //    resDate = $getDate.split("/"),
            //    $endDate = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0] + "" + $getTime + ":00";

            //alert($("#gameID").chosen().val());
            if (!$('#start').val().trim()) {

                alert("ข้อมูลวันที่ไม่ถูกต้อง");

                return false;
            }
            

            var resDate = $('#start').val().split("/"),
            $start = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0],
            resDate = $('#end').val().split("/"),
            $end = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0];

            $('#spinner').toggle(true);
            $.ajax({
                type: 'POST',
                async: true,
                url: '/api/report/register/user/',
                data: {
                    gameID: $("#gameID").val(),//+$("#gameID").chosen().val()
                    timeStart: $start,
                    timeEnd: $end
                },
                dataType: 'json',
                success: function (Json) {
                    console.log('get :', Json);
                    if (Json.data === null) {
                        alert('ไม่พบข้อมูล');
                        $('#spinner').toggle(false);
                        return false;
                    }

                    var options = chartOption();

                    jx = new Array(Json.data);
                    //console.log('get :', jx[0]);

                    var JsonLenght = (jx[0].length - 1),
                        $daa = "";


                    ja = new Array();

                    var $name = '',
                        $oneTime = true;

                    $active = new Array();
                    $register = new Array();
                    var $intJa = 0;
                    $.each(jx[0], function (key, value) {

                        $name = value.gameID;
                        $active[key] = value.countActive;
                        $register[key] = value.countRegister;
                        //ja[key] = value.count;//{ x: $vas, y: value.count }

                        //set line X (category)
                        var d = new Date(value.curTime);
                        var e = formatDate(d);
                        if ($oneTime) { options.xAxis.categories.push(e); }


                        //$oneTime = false;
                        $data = JSON.stringify(ja);

                        console.log('get :', value);
                        // name of value


                    });//end each


                    $data = JSON.stringify($active);
                    options.series.push({
                        type: 'column',
                        name: 'Active',
                        data: $.parseJSON($data)
                    });

                    $data = JSON.stringify($register);
                    options.series.push({
                        type: 'column',
                        name: 'Register',
                        data: $.parseJSON($data)
                    });



                    $avg = new Array();
                    $.each($active, function (key, value) {
                        $avg[key] = (value + $register[key]) / 2;
                    });
                    $data = JSON.stringify($avg);
                    options.series.push({
                        type: 'spline',
                        name: 'Average',
                        data: $.parseJSON($data),
                        marker: {
                            lineWidth: 2,
                            lineColor: Highcharts.getOptions().colors[3],
                            fillColor: 'white'
                        }
                    });


                    options.series.push({
                        type: 'pie',
                        name: 'Total Users',
                        center: [60, 80],
                        size: 100,
                        showInLegend: false,
                        dataLabels: {
                            enabled: true,
                            format: '{point.y}'
                        },
                        data: [{
                            name: 'Active',
                            y: Json._sumCountActive,
                            color: Highcharts.getOptions().colors[0] // Jane's color
                        }, {
                            name: 'Register',
                            y: Json._sumCountRegister,
                            color: Highcharts.getOptions().colors[1] // John's color
                        }]
                    });



                    var chart = new Highcharts.Chart(options);






                    $('#spinner').toggle(false);


                }//success

            });


        });






    });



    function chartOption() {

        var options = {
            chart: {
                renderTo: 'chart',
                zoomType: 'xy'
            },
            title: {
                text: 'Active & Registration Chart'
            },
            xAxis: {
                categories: []
            },
            yAxis: {
                title: {
                    text: 'active to person'
                },
                labels: {
                    formatter: function () {
                        return this.value;
                    }
                }
            },
            labels: {
                items: [{
                    html: 'Total Users',
                    style: {
                        left: '50px',
                        top: '18px',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'
                    }
                }]
            },
            //plotOptions: {
            //    series: {
            //        borderWidth: 0,
            //        dataLabels: {
            //            enabled: true,
            //            format: '{point.y}'
            //        }
            //    }
            //},
            series: []
        };


        return options;


    }



    function formatDate($date) {

        var d = new Date($date);
        var offset = (new Date().getTimezoneOffset() / 60) * -1;
        var date = new Date(d.getTime() - 1000 * 3600 * 7);

        var hours = date.getHours();
        var minutes = date.getMinutes();

        //var ampm = hours >= 12 ? 'pm' : 'am';
        //hours = hours % 12;
        //hours = hours ? hours : 12;
        //minutes = minutes < 10 ? '0' + minutes : minutes;
        //var strTime = hours + ':' + minutes + ' ' + ampm;
        return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
    }





</script>

