@model Awecent.Back.Serial.Models.GashaponHeader
@{
    ViewBag.Title = "GashaponDetail";
}
<style>
    .row {
        margin: 5px 0;
    }
    .margin-left {
        margin-left: 20px;
    }
    div#EditItemGashapon .modal-dialog {
        width: 70%;
    }
</style>
<h2>Gashapon Game Setting</h2>
<form ng-app="MyApp" name="GashaponForm" id="GashaponForm" ng-controller="GashaponDetailController" >
    <div class="row">
        <a class="btn btn-sm btn-primary" href="@Url.Action("GashaponHeader", "Gashapon")">Back</a>
        <a class="btn btn-sm btn-primary" href="javascript://" ng-click="SaveChangeGashaponHeader()">Save</a>
    </div>
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">Gashapon Header Information</div>
            <div class="panel-body">

                <div class="row">
                    <div class="col-sm-4">
                        <label>Game Name</label>
                        <input type="text" class="form-control" ng-model="input.GameName" name="GameName" placeholder="99" readonly/>
                    </div>
                    <div class="col-sm-4">
                        <label>Event Name</label>
                        <input type="text" class="form-control" ng-model="input.GashaponName" name="GashaponName" placeholder="99" readonly />
                    </div>
                    <div class="col-sm-4">
                        <label>Status</label>
                        <select ng-model="input.StatusId" class="form-control" name="Status"
                                ng-options="ser.StatusId as ser.StatusName for ser in Status"></select>
                    </div>
                </div>
                                
                <div class="row">
                        <div class="col-sm-4">
                <label>Visible Start Date</label>
                <p class="input-group">
                    <input type="text" class="form-control" uib-datepicker-popup="{{format}}"
                           ng-model="input.VisibleStartDate" is-open="status.openedVisibleStartDate" name="VisibleStartDate"
                           datepicker-options="dateTimeOptions" ng-required="true" close-text="Close" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-default" ng-click="openVisibleStartDate($event)">
                            <i class="glyphicon glyphicon-calendar"></i>
                        </button>
                    </span>
                </p>
            </div>

            <div class="col-sm-4">
                <label>Visible End Date</label>
                <p class="input-group">
                    <input type="text" class="form-control" uib-datepicker-popup="{{format}}"
                           ng-model="input.VisibleEndDate" is-open="status.openedVisibleEndDate" name="VisibleEndDate"
                           min-date="input.VisibleStartDate"
                           datepicker-options="dateOptions" ng-required="true" close-text="Close" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-default" ng-click="openVisibleEndDate($event)">
                            <i class="glyphicon glyphicon-calendar"></i>
                        </button>
                    </span>
                </p>
            </div>

                        <div class="col-sm-4">
                            <label>Return Type</label>
                            <select ng-model="input.ReturnTypeId" class="form-control" name="ReturnType"
                                    ng-options="ser.ReturnTypeId as ser.ReturnTypeName for ser in ReturnType"></select>
                        </div>
                    </div>
                                
                <div class="row">
                    <div class="col-sm-4">
                        <label>Start Date</label>
                        <p class="input-group">
                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}"
                                   ng-model="input.startDate" is-open="status.openedStartDate" name="startDate"
                                   datepicker-options="dateOptions" ng-required="true" close-text="Close" />
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default" ng-click="openStartDate($event)">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                </button>
                            </span>
                        </p>
                    </div>
                    <div class="col-sm-4">
                        <label>End Date</label>
                        <p class="input-group">
                            <input type="text" class="form-control" uib-datepicker-popup="{{format}}"
                                   ng-model="input.endDate" is-open="status.openedEndDate" name="endDate"
                                   min-date="input.startDate"
                                   datepicker-options="dateOptions" ng-required="true" close-text="Close" />
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default" ng-click="openEndDate($event)">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                </button>
                            </span>
                        </p>
                    </div>

            </div>



                <div class="row">

                    <div class="col-sm-4">
                        <label>Free play</label>
                        <p class="input-group">
                            <input type="text" class="form-control" ng-model="input.free" name="free" placeholder="Amount" />

                        </p>
                    </div>

                    <div class="col-sm-4">
                        <label>Point</label>
                        <p class="input-group">
                            <input type="text" class="form-control" ng-model="input.point" name="point" placeholder="Amount" />
                        </p>
                    </div>

                </div>



        </div>
    </div>
    <div class="row">
        <a class="btn btn-sm btn-primary" href="javascript://" ng-click="getDetail()">Add</a>
        <a class="btn btn-sm btn-primary" href="javascript://" ng-click="deleteSelectRow()">Delete</a>
    </div>
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">Gashapon Detail Information</div>
            <div class="panel-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <td><input type="checkbox" ng-model="model.allItemsSelected" ng-change="selectAll()"></td>
                            <td>Item Id</td>
                            <td>Item Name</td>
                            <td>Drop Rate</td>
                            <td>Limit Item</td>
                            <td>Limit Item Per</td>
                            <td>#</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="item in model.table" ng-class="{selected: item.isChecked}">
                            <td>
                                <input type="checkbox" ng-model="item.isChecked" ng-change="selectEntity()">
                            </td>
                            <td>{{ item.ItemId }}</td>
                            <td>{{ item.ItemName  }}</td>
                            <td>{{ item.DropRate | number}}</td>
                            <td>{{ item.LimitItem  }}</td>
                            <td>{{ showLimitItemPer(item.LimitItemPerId)  }}</td>
                            <td>
                                <a href="javascript://" ng-click="getDetail($index)">edit</a>
                                    <text>
                                        <a href="javascript://" ng-show="object.status == 4" ng-click="setstatus(object.promotionid ,object.status)">pending</a>
                                        <a href="javascript://" ng-show="object.status == 3" ng-click="setstatus(object.promotionid , object.status)">active</a>
                                        <a href="javascript://" ng-show="object.status == 1" ng-click="delete(object.promotionid)">delete</a>
                                    </text>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @Html.Partial("~/Views/Gashapon/_EditItemGashapon.cshtml")
</form>

@section Scripts{
    <script type="text/javascript">
    angular.module('MyApp', ['ui.bootstrap']).controller('GashaponDetailController', ['$scope', '$http', function ($scope, $http) {
        var form = $('#GashaponForm');
        $scope.input = {};
        $scope.input.Page = 1;
        $scope.input.PageSize = 10;
        $scope.input.Total = 0;

        //Set Gashapon Header Information
        $scope.input.GameName = '@Model.GameName';
        $scope.input.GashaponName = '@Model.GashaponName';
        $scope.input.StatusId = '@Model.StatusId';
        $scope.input.VisibleStartDate = '@Model.VisibleStartDate';
        $scope.input.VisibleEndDate = '@Model.VisibleEndDate';
        $scope.input.ReturnTypeId = '@Model.ReturnTypeId';
        $scope.input.startDate = '@Model.StartDate';
        $scope.input.endDate = '@Model.EndDate';
        $scope.input.free = '@Model.free';
        $scope.input.point = '@Model.point';

        $scope.input.GashaponHdrId = @ViewBag.GashaponHdrId;

        $scope.table = [];
        //DDL
        $scope.Status = [{ StatusId: '1', StatusName: 'Active' }, { StatusId: '2', StatusName: 'Inactive' }];
        $scope.ReturnType = [{ ReturnTypeId: '1', ReturnTypeName: 'Item Code' }, { ReturnTypeId: '2', ReturnTypeName: 'Cell API' }];
        $scope.LimitItemPerDay = [{ LimitItemPerId: '1', LimitItemPerName: 'Active' }, { LimitItemPerId: '0', LimitItemPerName: 'Inactive' }];
        $scope.showLimitItemPer = function (s) {
            if (s == "1") return "Active";
            else if (s == "0") return "Inactive";
        }
        $scope.status = {};
        $scope.status.openedVisibleStartDate = false;
        $scope.status.openedVisibleEndDate = false;

        $scope.status.openedStartDate = false;
        $scope.status.openedEndDate = false;

        $scope.formats = ['dd-MMMM-yyyy  HH:mm:ss', 'yyyy/MM/dd  HH:mm:ss', 'dd.MM.yyyy  HH:mm:ss'];
        $scope.format = $scope.formats[1];

        var model = {};
        $scope.model = model;

        // This property is bound to the checkbox in the table header
        model.allItemsSelected = false;

        // Fired when an entity in the table is checked
        $scope.selectEntity = function () {
            // If any entity is not checked, then uncheck the "allItemsSelected" checkbox
            for (var i = 0; i < model.table.length; i++) {
                if (!model.table[i].isChecked) {
                    model.allItemsSelected = false;
                    return;
                }
            }
            // ... otherwise ensure that the "allItemsSelected" checkbox is checked
            model.allItemsSelected = true;
        };

        // Fired when the checkbox in the table header is checked
        $scope.selectAll = function () {
            // Loop through all the entities and set their isChecked property
            for (var i = 0; i < model.table.length; i++) {
                model.table[i].isChecked = model.allItemsSelected;
            }
        };

        $scope.openVisibleStartDate = function ($even) {
            $scope.status.openedVisibleStartDate = true;
        }

        $scope.openVisibleEndDate = function ($even) {
            $scope.status.openedVisibleEndDate = true;
        }

        $scope.openStartDate = function ($even) {
            $scope.status.openedStartDate = true;
        }

        $scope.openEndDate = function ($even) {
            $scope.status.openedEndDate = true;
        }

        $scope.showModel = function () {
            $('#myModalUpdate').modal('show');
        }
        $scope.closeModel = function () {
            $('#myModalUpdate').modal('toggle');
        }

        $scope.SearchGashaponDetail = function () {
            $('#spinner').toggle(true);
            $http.post('@Url.Action("SearchGashaponDetail", "Gashapon")', $scope.input)
                    .success(function (d) {
                        $('#spinner').toggle(false);
                        if (d.Result) {
                            $scope.model.table = d.Data;
                        } else {
                            notifyWarning(d.Message);
                        }
                    }).error(function (e) {
                        $('#spinner').toggle(false);
                        console.log(e);
                        notifyError('500 server error.');
                    });
        }

        $scope.SaveChangeGashaponHeader = function () {
            console.log('saveChange', $scope.input);// return;
            $('#spinner').toggle(true);
            $http.post('@Url.Action("UpdateGashaponHeader", "Gashapon")', $scope.input)
                .success(function (d) {
                    if (d.Result) {
                        alert(d.Message);
                        notifySuccess(d.Message);
                        $('#spinner').toggle(false);
                        window.location = '@Url.Action("GashaponDetail", "Gashapon")';
                    }else{
                        alert(d.Message);
                        notifyError(d.Message);
                        $('#spinner').toggle(false);
                    }
                }).error(function (e) {
                    $('#spinner').toggle(false);
                    console.log(e);
                    notifyError('500 server error.');
                });
        }

        $scope.saveOrUpdateItemGashapon = function () {
            console.log('saveOrUpdateItemGashapon', $scope.input);// return;
            if($scope.input.Status == 1){
                console.log('saveItemGashapon', $scope.input);// return;
                if ($scope.input == null) return;
                if (!form.valid()) return;
                $('#spinner').toggle(true);
                $http.post('@Url.Action("CreateGashaponDetail", "Gashapon")', $scope.input)
                    .success(function (d) {
                        if (d.Result) {
                            alert(d.Message);
                            notifySuccess(d.Message);
                            $('#spinner').toggle(false);
                            window.location = '@Url.Action("GashaponDetail", "Gashapon")';
                        }else{
                            alert(d.Message);
                            notifyError(d.Message);
                            $('#spinner').toggle(false);
                        }
                    }).error(function (e) {
                        $('#spinner').toggle(false);
                        console.log(e);
                        notifyError('500 server error.');
                    });
            }else if($scope.input.Status == 2){
                console.log('updateItemGashapon', $scope.input);// return;
                if ($scope.input == null) return;
                if (!form.valid()) return;
                $('#spinner').toggle(true);
                if($scope.input.LimitItem == null){
                    $scope.input.LimitItemPerId = null;
                }
                $http.post('@Url.Action("UpdateGashaponDetail", "Gashapon")', $scope.input)
                    .success(function (d) {
                        if (d.Result) {
                            alert(d.Message);
                            notifySuccess(d.Message);
                            $('#spinner').toggle(false);
                            window.location = '@Url.Action("GashaponDetail", "Gashapon")';
                        }else{
                            alert(d.Message);
                            notifyError(d.Message);
                            $('#spinner').toggle(false);
                        }
                    }).error(function (e) {
                        $('#spinner').toggle(false);
                        console.log(e);
                        notifyError('500 server error.');
                    });
            }

        }


        $scope.SearchGashaponDetail();
        $scope.getDetail = function (index) {
            if(index == null){
                console.log(index);
                $scope.input.Status = 1;
                $scope.input.statusName = 'Add Item Gashapon';
                $('#EditItemGashapon').modal('show');
            }else{
                console.log(index);
                $scope.input.Status = 2;
                $scope.input.statusName = 'Edit Item Gashapon';
                console.log($scope.model.table[index]);
                $scope.input.GashaponDtlId = $scope.model.table[index].GashaponDtlId;
                $scope.input.ItemId = $scope.model.table[index].ItemId;
                $scope.input.ItemName = $scope.model.table[index].ItemName;
                $scope.input.DropRate = $scope.model.table[index].DropRate;
                $scope.input.LimitItem = $scope.model.table[index].LimitItem;
                $scope.input.LimitItemPerId = $scope.model.table[index].LimitItemPerId;
                $('#EditItemGashapon').modal('show');
            }
        }



        $scope.deleteSelectRow = function () {
            $('#spinner').toggle(true);
            var ItemIdList = '';
            for (var i = 0; i < model.table.length; i++) {
                if (model.table[i].isChecked) {
                    ItemIdList+= model.table[i].GashaponDtlId+ ',';
                }
            }
            ItemIdList = ItemIdList.substr(0, ItemIdList.length-1);
            if(ItemIdList != ""){
                $scope.deleteConfirm(ItemIdList);
            }

        }

        $scope.deleteConfirm = function (ItemIdList) {
            if (!confirm('Confirm delete promotion id : ' + ItemIdList + ' ? ')) { return; }

            $http.get('@Url.Action("DeleteItemGashapon", "Gashapon")/' + ItemIdList)
        .success(function (d) {
            console.log('delete', d);
            if (d.Result){
                alert(d.Message);
                notifySuccess(d.Message);
                $('#spinner').toggle(false);
                window.location = '@Url.Action("GashaponDetail", "Gashapon")';
            }
            else {
                alert(d.Message);
                notifyError(d.Message);
                $('#spinner').toggle(false);
            }
        }).error(function (e) {
            $('#spinner').toggle(false);
            console.log(e);
            notifyError('500 server error.');
        });
    }

    $scope.convertDate = function (strDate) {
        //console.log(strDate);
        if (strDate == null) return;
        if (strDate instanceof Date) return strDate;
        var milisec = strDate.substring(6, strDate.length - 2);
        var longMili = parseFloat(milisec);
        var myDate = new Date(longMili);
        return myDate;
    }

    $(document).ready(function () {
        $.validator.addMethod("valueNotEquals", function (value, element, arg) {
            return arg != value;
        }, "Please select some value.");

        form.validate({
            rules: {
                ItemId: { required: true,},
                ItemName: { required: true },
                DropRate: { required: true },
            },
        });
    });
    }]);
</script>
}