
@{
    ViewBag.Title = "Active";
}

@Scripts.Render("~/bundles/report")
@Styles.Render("~/Content/report")

<style>
    .input-group-addon, .input-group-btn {
        width: inherit;
    }

    .float-left {
        float: left;
    }

    .rg-2m:first-child {
        margin-right: 1em;
    }

    .mg-2 {
        margin-bottom: 2em;
    }

    .chosen-container-multi .chosen-choices {
        border-radius: 3px;
        width: 500px;
    }
</style>

<div class="mg-2">
    <h2>Active Users</h2>
    <div class="bs-example" data-example-id="form-group-height-sizes">
        <form class="form-horizontal">

            <div class="panel panel-default">
                <div class="panel-heading">Filter</div>
                <div class="panel-body">

                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall">Game</label>
                        <div class="col-sm-10">

                            <select id="gameID" data-placeholder="Choose a Gams..." class="chosen-select" multiple tabindex="5">
                                @foreach (Awecent.Back.Serial.Models.Game game in ViewBag.Games)
                                {
                                    <option value="@game.GameId">@game.GameName</option>
                                }
                            </select>

                        </div>
                    </div>


                    @*<div class="form-group form-group-sm">
            <label class="col-sm-2 control-label" for="formGroupInputSmall">Small label</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" id="formGroupInputSmall" placeholder="Small input">
            </div>
        </div>*@
                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall">Date & Time</label>
                        <div class="col-sm-10">

                            <div class="float-left rg-2m">
                                <div class='input-group date' id='datetimepicker6'>
                                    <input type='text' class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>

                            <div class="float-left">
                                <div class='input-group date' id='datetimepicker7'>
                                    <input type='text' class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        <label class="col-sm-2 control-label" for="formGroupInputSmall"></label>
                        <div class="col-sm-10">
                            <button class="btn btn-info" type="button" ng-click="search()">Search</button>
                        </div>

                    </div>


                </div>
            </div>




        </form>
    </div>



</div>


<div id="chart" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

<script type="text/javascript">
    $(function () {

        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $('#datetimepicker6').datetimepicker({
            defaultDate: new Date(),
            format: 'DD/MM/YYYY - HH:00'
        });
        $('#datetimepicker7').datetimepicker({
            defaultDate: new Date(),
            format: 'DD/MM/YYYY - HH:00',
            useCurrent: false //Important! See issue #1075
        });

        $("#datetimepicker6").on("dp.change", function (e) {
            $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
        });
        $("#datetimepicker7").on("dp.change", function (e) {
            $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
        });

    });
</script>





<script type="text/javascript">



    $(function () {



        $(".btn-info").click(function () {

            var str = $("#datetimepicker6").find("input").val(),
                res = str.split("-"),
                $getDate = res[0],
                $getTime = res[1],
                resDate = $getDate.split("/"),
                $startDate = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0] + "" + $getTime + ":00";

            var str = $("#datetimepicker7").find("input").val(),
                res = str.split("-"),
                $getDate = res[0],
                $getTime = res[1],
                resDate = $getDate.split("/"),
                $endDate = resDate[2].trim() + "-" + resDate[1] + "-" + resDate[0] + "" + $getTime + ":00";


            if ($("#gameID").chosen().val() === null) {

                alert("Choose a game!");

                return false;
            }


            $('#spinner').toggle(true);

            $.ajax({
                type: 'POST',
                async: true,
                url: '/api/report/active/user/',
                data: {
                    gameID: '' + $("#gameID").chosen().val(),//+$("#gameID").chosen().val()
                    timeStart: $startDate,
                    timeEnd: $endDate
                },
                dataType: 'json',
                success: function (Json) {

                    var options = chartOption();
                    //aaa
                    jx = new Array(Json.data);
                    var JsonLenght = (jx[0].length - 1),
                        $data = "";


                    ja = new Array();
                    $.each(jx[0], function ($jsonKey, $jsonData) {
                        var $name = '',
                            $oneTime = true;
                        //console.log($jsonData);
                        $.each($jsonData.data, function (key, value) {

                            $name = value.gameID;
                            var $vas = key + 1;
                            ja[key] = value.count;//{ x: $vas, y: value.count }

                            //set line X (category)
                            var d = new Date(value.curTime);
                            var e = formatDate(d);
                            if ($oneTime) { options.xAxis.categories.push(e); }

                        });
                        $oneTime = false;
                        $data = JSON.stringify(ja);

                        // name of value
                        options.series.push({
                            name: $name != '' ? $("select#gameID option[value=" + $name + "]").html() : 'null',
                            data: $.parseJSON($data)
                        });

                    });//end each

                    var chart = new Highcharts.Chart(options);

                    $('#spinner').toggle(false);

                },

            });


        });






    });



    function chartOption() {

        var options = {
            chart: {
                renderTo: 'chart',
                type: 'line',
                zoomType: 'x'
            },
            title: {
                text: 'Active User'
            },
            //subtitle: {
            //    text: 'Source: Game'
            //},
            xAxis: {
                //allowDecimals: false,
                //labels: {
                //    formatter: function () {
                //        return this.value;
                //    }
                //}
                categories: []
            },
            yAxis: {
                title: {
                    text: 'active to person'
                },
                labels: {
                    formatter: function () {
                        return this.value + '';
                    }
                }
            },
            tooltip: {
                pointFormat: '{series.name} produced <b>{point.y:,.0f}</b><br/>warheads in {point.x}'
            },

            plotOptions: {
                area: {
                    pointStart: 0,
                    marker: {
                        enabled: false,
                        symbol: 'circle',
                        radius: 2,
                        states: {
                            hover: {
                                enabled: true
                            }
                        }
                    }
                },
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: []
        };





        return options;


    }



    function formatDate($date) {

        var d = new Date($date);
        var offset = (new Date().getTimezoneOffset() / 60) * -1;
        var date = new Date(d.getTime() - 1000 * 3600 * 7);

        var hours = date.getHours();
        var minutes = date.getMinutes();

        //var ampm = hours >= 12 ? 'pm' : 'am';
        //hours = hours % 12;
        //hours = hours ? hours : 12;
        //minutes = minutes < 10 ? '0' + minutes : minutes;
        //var strTime = hours + ':' + minutes + ' ' + ampm;
        return date.getDate() + "/" + date.getMonth() + "/" + date.getFullYear() + " - " + date.getHours() + ":00";
    }





</script>

